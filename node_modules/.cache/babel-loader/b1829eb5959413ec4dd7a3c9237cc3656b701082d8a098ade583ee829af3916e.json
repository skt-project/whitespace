{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikael Andrew\\\\whitespace-project\\\\geo-tracker\\\\src\\\\components\\\\LocationButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationButton = () => {\n  _s();\n  const [storeData, setStoreData] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [distributors, setDistributors] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [selectedDistributor, setSelectedDistributor] = useState('');\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/store-data').then(res => {\n      setStoreData(res.data);\n      const uniqueRegions = [...new Set(res.data.map(row => row.region))];\n      setRegions(uniqueRegions);\n      const uniqueDistributors = [...new Set(res.data.map(row => row.distributor))];\n      setDistributors(uniqueDistributors);\n    });\n  }, []);\n  const handleRegionChange = region => {\n    setSelectedRegion(region);\n    filterStores(region, selectedDistributor);\n  };\n  const handleDistributorChange = distributor => {\n    setSelectedDistributor(distributor);\n    filterStores(selectedRegion, distributor);\n  };\n  const filterStores = (region, distributor) => {\n    setFilteredStores(storeData.filter(row => (region ? row.region === region : true) && (distributor ? row.distributor === distributor : true)));\n    setSelectedStore(null);\n  };\n  const handleStoreChange = storeId => {\n    const store = filteredStores.find(s => s.store_id === storeId);\n    setSelectedStore(store);\n  };\n  const sendLocation = () => {\n    if (!selectedStore) return alert('Select a store first');\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const body = {\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n          timestamp: new Date().toISOString(),\n          ...selectedStore\n        };\n        try {\n          await axios.post('http://localhost:4000/api/location', body);\n          alert('Location sent!');\n        } catch (err) {\n          alert('Failed to send location');\n        }\n      }, () => alert('Error getting location'));\n    } else {\n      alert('Geolocation not supported');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white shadow-lg rounded-xl space-y-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Send My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRegion,\n      onChange: e => handleRegionChange(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), regions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region,\n        children: region\n      }, region, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDistributor,\n      onChange: e => handleDistributorChange(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Distributor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), distributors.map(distributor => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: distributor,\n        children: distributor\n      }, distributor, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selectedStore === null || selectedStore === void 0 ? void 0 : selectedStore.store_id) || '',\n      onChange: e => handleStoreChange(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), filteredStores.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: s.store_id,\n        children: `${s.region} - ${s.distributor} - ${s.store_id} - ${s.store_name}`\n      }, s.store_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendLocation,\n      className: \"bg-blue-600 text-white w-full p-2 rounded hover:bg-blue-700\",\n      children: \"Send Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationButton, \"p8Fa/EG2KZOPggvZY5VwLZyEqog=\");\n_c = LocationButton;\nexport default LocationButton;\nvar _c;\n$RefreshReg$(_c, \"LocationButton\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","LocationButton","_s","storeData","setStoreData","regions","setRegions","distributors","setDistributors","selectedRegion","setSelectedRegion","selectedDistributor","setSelectedDistributor","filteredStores","setFilteredStores","selectedStore","setSelectedStore","get","then","res","data","uniqueRegions","Set","map","row","region","uniqueDistributors","distributor","handleRegionChange","filterStores","handleDistributorChange","filter","handleStoreChange","storeId","store","find","s","store_id","sendLocation","alert","navigator","geolocation","getCurrentPosition","pos","body","latitude","coords","longitude","timestamp","Date","toISOString","post","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","store_name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mikael Andrew/whitespace-project/geo-tracker/src/components/LocationButton.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst LocationButton = () => {\n  const [storeData, setStoreData] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [distributors, setDistributors] = useState([]);\n  const [selectedRegion, setSelectedRegion] = useState('');\n  const [selectedDistributor, setSelectedDistributor] = useState('');\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/store-data')\n      .then((res) => {\n        setStoreData(res.data);\n\n        const uniqueRegions = [...new Set(res.data.map(row => row.region))];\n        setRegions(uniqueRegions);\n\n        const uniqueDistributors = [...new Set(res.data.map(row => row.distributor))];\n        setDistributors(uniqueDistributors);\n      });\n  }, []);\n\n  const handleRegionChange = (region) => {\n    setSelectedRegion(region);\n    filterStores(region, selectedDistributor);\n  };\n\n  const handleDistributorChange = (distributor) => {\n    setSelectedDistributor(distributor);\n    filterStores(selectedRegion, distributor);\n  };\n\n  const filterStores = (region, distributor) => {\n    setFilteredStores(storeData.filter(row => \n      (region ? row.region === region : true) && \n      (distributor ? row.distributor === distributor : true)\n    ));\n    setSelectedStore(null);\n  };\n\n  const handleStoreChange = (storeId) => {\n    const store = filteredStores.find(s => s.store_id === storeId);\n    setSelectedStore(store);\n  };\n\n  const sendLocation = () => {\n    if (!selectedStore) return alert('Select a store first');\n\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        async (pos) => {\n          const body = {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            timestamp: new Date().toISOString(),\n            ...selectedStore\n          };\n\n          try {\n            await axios.post('http://localhost:4000/api/location', body);\n            alert('Location sent!');\n          } catch (err) {\n            alert('Failed to send location');\n          }\n        },\n        () => alert('Error getting location')\n      );\n    } else {\n      alert('Geolocation not supported');\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-lg rounded-xl space-y-4 w-full max-w-md\">\n      <h2 className=\"text-xl font-bold\">Send My Location</h2>\n\n      <select \n        value={selectedRegion} \n        onChange={(e) => handleRegionChange(e.target.value)} \n        className=\"w-full p-2 border\"\n      >\n        <option value=\"\">Select Region</option>\n        {regions.map(region => <option key={region} value={region}>{region}</option>)}\n      </select>\n\n      <select \n        value={selectedDistributor} \n        onChange={(e) => handleDistributorChange(e.target.value)} \n        className=\"w-full p-2 border\"\n      >\n        <option value=\"\">Select Distributor</option>\n        {distributors.map(distributor => <option key={distributor} value={distributor}>{distributor}</option>)}\n      </select>\n\n      <select \n        value={selectedStore?.store_id || ''} \n        onChange={(e) => handleStoreChange(e.target.value)} \n        className=\"w-full p-2 border\"\n      >\n        <option value=\"\">Select Store</option>\n        {filteredStores.map(s => (\n          <option key={s.store_id} value={s.store_id}>\n            {`${s.region} - ${s.distributor} - ${s.store_id} - ${s.store_name}`}\n          </option>\n        ))}\n      </select>\n\n      <button \n        onClick={sendLocation} \n        className=\"bg-blue-600 text-white w-full p-2 rounded hover:bg-blue-700\"\n      >\n        Send Location\n      </button>\n    </div>\n  );\n};\n\nexport default LocationButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}