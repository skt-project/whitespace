{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mikael Andrew\\\\whitespace-project\\\\geo-tracker\\\\src\\\\components\\\\LocationButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationButton = () => {\n  _s();\n  const [storeData, setStoreData] = useState([]);\n  const [spvs, setSpvs] = useState([]);\n  const [selectedSPV, setSelectedSPV] = useState('');\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/store-data').then(res => {\n      setStoreData(res.data);\n      const uniqueSPVs = [...new Set(res.data.map(row => row.spv))];\n      setSpvs(uniqueSPVs);\n    });\n  }, []);\n  const handleSPVChange = spv => {\n    setSelectedSPV(spv);\n    setFilteredStores(storeData.filter(row => row.spv === spv));\n    setSelectedStore(null);\n  };\n  const handleStoreChange = storeId => {\n    const store = filteredStores.find(s => s.store_id === storeId);\n    setSelectedStore(store);\n  };\n  const sendLocation = () => {\n    if (!selectedStore) return alert('Select a store first');\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const body = {\n          latitude: pos.coords.latitude,\n          longitude: pos.coords.longitude,\n          timestamp: new Date().toISOString(),\n          ...selectedStore\n        };\n        try {\n          await axios.post('http://localhost:4000/api/location', body);\n          alert('Location sent!');\n        } catch (err) {\n          alert('Failed to send location');\n        }\n      }, () => alert('Error getting location'));\n    } else {\n      alert('Geolocation not supported');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white shadow-lg rounded-xl space-y-4 w-full max-w-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Send My Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSPV,\n      onChange: e => handleSPVChange(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select SPV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), spvs.map(spv => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: spv,\n        children: spv\n      }, spv, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selectedStore === null || selectedStore === void 0 ? void 0 : selectedStore.store_id) || '',\n      onChange: e => handleStoreChange(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), filteredStores.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: s.store_id,\n        children: `${s.region} - ${s.distributor} - ${s.store_id} - ${s.store_name}`\n      }, s.store_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendLocation,\n      className: \"bg-blue-600 text-white w-full p-2 rounded hover:bg-blue-700\",\n      children: \"Send Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationButton, \"Ql4Bhlc4j0gAwgpnaUeMsS5oeYw=\");\n_c = LocationButton;\nexport default LocationButton;\nvar _c;\n$RefreshReg$(_c, \"LocationButton\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","LocationButton","_s","storeData","setStoreData","spvs","setSpvs","selectedSPV","setSelectedSPV","filteredStores","setFilteredStores","selectedStore","setSelectedStore","get","then","res","data","uniqueSPVs","Set","map","row","spv","handleSPVChange","filter","handleStoreChange","storeId","store","find","s","store_id","sendLocation","alert","navigator","geolocation","getCurrentPosition","pos","body","latitude","coords","longitude","timestamp","Date","toISOString","post","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","region","distributor","store_name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mikael Andrew/whitespace-project/geo-tracker/src/components/LocationButton.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst LocationButton = () => {\n  const [storeData, setStoreData] = useState([]);\n  const [spvs, setSpvs] = useState([]);\n  const [selectedSPV, setSelectedSPV] = useState('');\n  const [filteredStores, setFilteredStores] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/store-data')\n      .then((res) => {\n        setStoreData(res.data);\n        const uniqueSPVs = [...new Set(res.data.map(row => row.spv))];\n        setSpvs(uniqueSPVs);\n      });\n  }, []);\n\n  const handleSPVChange = (spv) => {\n    setSelectedSPV(spv);\n    setFilteredStores(storeData.filter(row => row.spv === spv));\n    setSelectedStore(null);\n  };\n\n  const handleStoreChange = (storeId) => {\n    const store = filteredStores.find(s => s.store_id === storeId);\n    setSelectedStore(store);\n  };\n\n  const sendLocation = () => {\n    if (!selectedStore) return alert('Select a store first');\n\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        async (pos) => {\n          const body = {\n            latitude: pos.coords.latitude,\n            longitude: pos.coords.longitude,\n            timestamp: new Date().toISOString(),\n            ...selectedStore\n          };\n\n          try {\n            await axios.post('http://localhost:4000/api/location', body);\n            alert('Location sent!');\n          } catch (err) {\n            alert('Failed to send location');\n          }\n        },\n        () => alert('Error getting location')\n      );\n    } else {\n      alert('Geolocation not supported');\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white shadow-lg rounded-xl space-y-4 w-full max-w-md\">\n      <h2 className=\"text-xl font-bold\">Send My Location</h2>\n\n      <select value={selectedSPV} onChange={(e) => handleSPVChange(e.target.value)} className=\"w-full p-2 border\">\n        <option value=\"\">Select SPV</option>\n        {spvs.map(spv => <option key={spv} value={spv}>{spv}</option>)}\n      </select>\n\n      <select value={selectedStore?.store_id || ''} onChange={(e) => handleStoreChange(e.target.value)} className=\"w-full p-2 border\">\n        <option value=\"\">Select Store</option>\n        {filteredStores.map(s => (\n          <option key={s.store_id} value={s.store_id}>\n            {`${s.region} - ${s.distributor} - ${s.store_id} - ${s.store_name}`}\n          </option>\n        ))}\n      </select>\n\n      <button onClick={sendLocation} className=\"bg-blue-600 text-white w-full p-2 rounded hover:bg-blue-700\">\n        Send Location\n      </button>\n    </div>\n  );\n};\n\nexport default LocationButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}